name: Auto PR and Merge

on:
  create:
    branches:
      - "[0-9]*"
  push:
    branches:
      - "[0-9]*"

permissions:
  pull-requests: write
  contents: write
  checks: write
  issues: read

jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository # Checkout main branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Exit if no changes
        run: |
          if [ -z "$(git diff --name-only HEAD~1 HEAD)" ]; then
            echo "No changes to make PR"
            exit 0
          fi

      - name: Get PR body
        id: get-pr-body
        run: |
          PR_BODY=$(bash .github/scripts/make-pr-body.sh ${{ github.ref_name }})
          echo "pr_body<<EOF" >> $GITHUB_OUTPUT
          echo "$PR_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Extract issue number and get labels
        id: get-issue
        run: |
          # Extract issue number from branch name
          ISSUE_NUMBER=$(echo "${{ github.ref_name }}" | grep -o '^[0-9]*')

          # Get issue labels
          LABELS=$(gh issue view $ISSUE_NUMBER --json labels --jq '.labels[].name' | tr '\n' ',' | sed 's/,$//')
          TITLE=$(gh issue view $ISSUE_NUMBER --json title --jq '.title')

          echo "issue_title=$TITLE" >> $GITHUB_OUTPUT
          echo "labels=$LABELS" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # GitHub CLI is recommended for creating PRs with existing branches
      # https://github.com/peter-evans/create-pull-request/blob/main/docs/common-issues.md#create-using-an-existing-branch-as-the-pr-branch
      - name: Create Pull Request
        id: create-pr
        run: |
          PR_LINK=$(gh pr create \
            --title "${{ steps.get-issue.outputs.issue_title }}" \
            --body "${{ steps.get-pr-body.outputs.pr_body }}" \
            --base main \
            --head "${{ github.ref_name }}" \
            --assignee "${{ github.actor }}" \
            --label "${{ steps.get-issue.outputs.labels }}")
          echo "pull-request-link=$PR_LINK" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable Auto-merge
        if: steps.create-pr.outputs.pull-request-link
        run: |
          gh pr merge ${{ steps.create-pr.outputs.pull-request-link }} --auto --squash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
